1.链表中的元素成为“结点”，每个节点包含俩部分，数据域和指针域，单向链表通常由一个头指针指向链表头，（头指针
只有地址，没有数据域）
单向链表有一个尾结点，该结点的指针部分指向一个空结点。 （结点里的指针是存放下一个结点的地址）
链表的类型：单向链表，双向链表，循环链表

2.链表的基本操作
1）创建链表
2）检索操作
3）插入操作
4）删除操作

eg.单静态链表构建

struct student a,c, *head, *p;

a.nums = 1;
a.score = 100
b.nums = 2;
b.score = 101;
head = &a; a.next = &b; b.next = NULL; p = head;

do{
printf("......");
p=p->next;
}while(p!= NULL);

3.处理动态链表所需要的函数
1)malloc函数
在内存的动态存储区中分配一个长度为size的连续空间。
eg. int *array,n;
array = (int*)malloc(n*sizeof(int)) 

2)calloc 函数
在内存的动态存储区中分配n个长度为size的连续空间。

3)free (void *p)  
释放由p指向的内存区

4.构建动态链表 (插入和删除结点)
1) 插入结点
                                                                                                                                                                   
2) 删除结点

























