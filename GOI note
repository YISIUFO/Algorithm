必看：The Algorithm Design Manual ，cc150 ，leetcode,TOPCODER.

给你们一个标准，不一定要全部做到，这个是我自己准备到的程度，我的背景是强迫症重度患者。
          标准一： 面试前Leetcode我都做完了，cc150重要章节做完，不重要章节直                           
          接看解答略读了一遍。
          
          标准二： 面试前一个月我保持每天做12-14小时题。每道题的流程是想思
          路，想不出来打死也不看答案（我强迫症），继续想，想出来为止，写代码，测试代码，找大牛的解法，
          比较自己和大牛的学习大牛的思路和代码方式和涉及到的理论，用大牛的思路再写一遍代码。
          
          标准三： 不得不出门的时候先读两道题干，一边走路一边想。两个月里大致撞30个人。
          
          标准四： 养成从程序的角度思考问题的习惯。朋友出门让我留意着点汤，要
          是快煮干了就把火关掉。那个时候我脑子里已经可以先执行机器语言了。于是我每
          十分钟下去看一眼汤，汤一点点煮干，直到正好干的那一瞬间，我把火关掉了。

请忘记你是在准备面试。就是单纯的解决问题爽！还想再解决一个！

具体来说面试官想知道的是你的三个能力------遇到新问题的分析能力（简称智商），沟通能力（因为常常是一个team共同解决一个难题），
coding能力（指代码的优雅程度啦可扩展性啦模块性啦之类，这个取决于你写了多少年代码的经验，没办法短时间提高。

一道面试题的正确姿势是：向面试官确认ambiguity------面试官都喜欢故意把题目说的比较模糊，
迅速找到critical point是聪明的标志。然后*************************明确边界条件和input的数据结构*********************************
然后才开始思考解法，思考时在白板/Google doc上涂涂画画，
随时讲出来自己想到了什么，面试官会告诉你这个思路有点问题/对是对但不够好/吊炸天/听起来还不错，
你开始想细节/换个思路/优化思路，重复直到面试官认可后写代码。千万不要着急下手，思考过程才是最重要的。切记。

Thank you for your time.


PS :website : 
a. https://github.com/UmassJin/Leetcode/blob/master/Design/Google_面经总结.py
b. http://www.aosabook.org/en/distsys.html


          
